{"ast":null,"code":"var _jsxFileName = \"/Users/masha/Desktop/react pizza-brio/src/components/home/slider/Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./slider.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = _ref => {\n  _s();\n\n  let {\n    title,\n    slides\n  } = _ref;\n  const [slideNumber, setSlideNumber] = React.useState(0);\n  const sliderRef = React.useRef(null);\n\n  const navigationHandle = direction => {\n    let newSlideNumber;\n    const totalNoofSlides = sliderRef.current.children.length - 1;\n    direction === \"left\" ? newSlideNumber = slideNumber === 0 ? totalNoofSlides : slideNumber - 1 : newSlideNumber = slideNumber === totalNoofSlides ? 0 : slideNumber + 1;\n    setSlideNumber(newSlideNumber); // adding/removing active class from slides\n\n    Array.from(sliderRef.current.children).forEach(slide => slide.classList.remove(\"active\"));\n    sliderRef.current.children[newSlideNumber].classList.add(\"active\"); // setting current slide's bg image as body background image\n\n    document.body.style.backgroundImage = `url(${images[newSlideNumber].source})`;\n  }; // checking if no slides available\n\n\n  if (slides.length <= 0) {\n    return \"No slides available..\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sliderWrapper\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sliderTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prevArrow\",\n      onClick: () => navigationHandle(\"left\"),\n      children: \"\\xAB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      ref: sliderRef,\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `slide${index === 0 ? \" active\" : \"\"}`,\n        children: [slide.source && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.source,\n          alt: slide.title,\n          loading: \"lazy\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), slide.title && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: slide.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextArrow\",\n      onClick: () => navigationHandle(\"right\"),\n      children: \"\\xBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderPagination\",\n      children: [slideNumber + 1, \" / \", slides.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"IrVp7e3P+4Tq3PzI6dJ1Vu7riYU=\");\n\n_c = Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","Slider","title","slides","slideNumber","setSlideNumber","useState","sliderRef","useRef","navigationHandle","direction","newSlideNumber","totalNoofSlides","current","children","length","Array","from","forEach","slide","classList","remove","add","document","body","style","backgroundImage","images","source","map","index"],"sources":["/Users/masha/Desktop/react pizza-brio/src/components/home/slider/Slider.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./slider.scss\";\n\nconst Slider = ({ title, slides }) => {\n  const [slideNumber, setSlideNumber] = React.useState(0);\n  const sliderRef = React.useRef(null);\n\n  const navigationHandle = (direction) => {\n    let newSlideNumber;\n    const totalNoofSlides = sliderRef.current.children.length - 1;\n    direction === \"left\"\n      ? (newSlideNumber = slideNumber === 0 ? totalNoofSlides : slideNumber - 1)\n      : (newSlideNumber =\n          slideNumber === totalNoofSlides ? 0 : slideNumber + 1);\n    setSlideNumber(newSlideNumber);\n\n    // adding/removing active class from slides\n    Array.from(sliderRef.current.children).forEach((slide) =>\n      slide.classList.remove(\"active\")\n    );\n    sliderRef.current.children[newSlideNumber].classList.add(\"active\");\n\n    // setting current slide's bg image as body background image\n    document.body.style.backgroundImage = `url(${images[newSlideNumber].source})`;\n  };\n\n  // checking if no slides available\n  if (slides.length <= 0) {\n    return \"No slides available..\";\n  }\n\n  return (\n    <div className=\"sliderWrapper\">\n      {title && <h3 className=\"sliderTitle\">{title}</h3>}\n      <button className=\"prevArrow\" onClick={() => navigationHandle(\"left\")}>\n        «\n      </button>\n      <div className=\"slider\" ref={sliderRef}>\n        {slides.map((slide, index) => (\n          <div className={`slide${index === 0 ? \" active\" : \"\"}`}>\n            {slide.source && (\n              <img\n                src={slide.source}\n                alt={slide.title}\n                loading=\"lazy\"\n                draggable={false}\n              />\n            )}\n            {slide.title && <h3>{slide.title}</h3>}\n          </div>\n        ))}\n      </div>\n      <button className=\"nextArrow\" onClick={() => navigationHandle(\"right\")}>\n        »\n      </button>\n      <div className=\"sliderPagination\">\n        {slideNumber + 1} / {slides.length}\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAEA,MAAMC,MAAM,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC,KAAF;IAASC;EAAT,CAAsB;EACpC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,KAAK,CAACM,QAAN,CAAe,CAAf,CAAtC;EACA,MAAMC,SAAS,GAAGP,KAAK,CAACQ,MAAN,CAAa,IAAb,CAAlB;;EAEA,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;IACtC,IAAIC,cAAJ;IACA,MAAMC,eAAe,GAAGL,SAAS,CAACM,OAAV,CAAkBC,QAAlB,CAA2BC,MAA3B,GAAoC,CAA5D;IACAL,SAAS,KAAK,MAAd,GACKC,cAAc,GAAGP,WAAW,KAAK,CAAhB,GAAoBQ,eAApB,GAAsCR,WAAW,GAAG,CAD1E,GAEKO,cAAc,GACbP,WAAW,KAAKQ,eAAhB,GAAkC,CAAlC,GAAsCR,WAAW,GAAG,CAH1D;IAIAC,cAAc,CAACM,cAAD,CAAd,CAPsC,CAStC;;IACAK,KAAK,CAACC,IAAN,CAAWV,SAAS,CAACM,OAAV,CAAkBC,QAA7B,EAAuCI,OAAvC,CAAgDC,KAAD,IAC7CA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB,CADF;IAGAd,SAAS,CAACM,OAAV,CAAkBC,QAAlB,CAA2BH,cAA3B,EAA2CS,SAA3C,CAAqDE,GAArD,CAAyD,QAAzD,EAbsC,CAetC;;IACAC,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAuC,OAAMC,MAAM,CAAChB,cAAD,CAAN,CAAuBiB,MAAO,GAA3E;EACD,CAjBD,CAJoC,CAuBpC;;;EACA,IAAIzB,MAAM,CAACY,MAAP,IAAiB,CAArB,EAAwB;IACtB,OAAO,uBAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,WACGb,KAAK,iBAAI;MAAI,SAAS,EAAC,aAAd;MAAA,UAA6BA;IAA7B;MAAA;MAAA;MAAA;IAAA,QADZ,eAEE;MAAQ,SAAS,EAAC,WAAlB;MAA8B,OAAO,EAAE,MAAMO,gBAAgB,CAAC,MAAD,CAA7D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAK,SAAS,EAAC,QAAf;MAAwB,GAAG,EAAEF,SAA7B;MAAA,UACGJ,MAAM,CAAC0B,GAAP,CAAW,CAACV,KAAD,EAAQW,KAAR,kBACV;QAAK,SAAS,EAAG,QAAOA,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,EAAG,EAArD;QAAA,WACGX,KAAK,CAACS,MAAN,iBACC;UACE,GAAG,EAAET,KAAK,CAACS,MADb;UAEE,GAAG,EAAET,KAAK,CAACjB,KAFb;UAGE,OAAO,EAAC,MAHV;UAIE,SAAS,EAAE;QAJb;UAAA;UAAA;UAAA;QAAA,QAFJ,EASGiB,KAAK,CAACjB,KAAN,iBAAe;UAAA,UAAKiB,KAAK,CAACjB;QAAX;UAAA;UAAA;UAAA;QAAA,QATlB;MAAA;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QALF,eAoBE;MAAQ,SAAS,EAAC,WAAlB;MAA8B,OAAO,EAAE,MAAMO,gBAAgB,CAAC,OAAD,CAA7D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBF,eAuBE;MAAK,SAAS,EAAC,kBAAf;MAAA,WACGL,WAAW,GAAG,CADjB,SACuBD,MAAM,CAACY,MAD9B;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAzDD;;GAAMd,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}